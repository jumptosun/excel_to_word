# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'excel_to_word.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pattern_relpacer


class MainWindow(QtWidgets.QDialog):
    def __init__(self):
        super().__init__()
        self.setupUi()
        self.bindSignal()

    def setupUi(self):

        self.setObjectName("Dialog")
        self.setEnabled(True)
        self.resize(328, 263)

        self.excelPushButton = QtWidgets.QPushButton(self)
        self.excelPushButton.setGeometry(QtCore.QRect(210, 40, 51, 23))
        self.excelPushButton.setObjectName("excelPushButton")
        self.wordPushButton = QtWidgets.QPushButton(self)
        self.wordPushButton.setGeometry(QtCore.QRect(210, 130, 51, 23))
        self.wordPushButton.setObjectName("wordPushButton")
        self.generatorPushButton = QtWidgets.QPushButton(self)
        self.generatorPushButton.setGeometry(QtCore.QRect(120, 210, 75, 23))
        self.generatorPushButton.setObjectName("generatorPushButton")
        self.widget = QtWidgets.QWidget(self)
        self.widget.setGeometry(QtCore.QRect(56, 20, 135, 131))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.excelLabel = QtWidgets.QLabel(self.widget)
        self.excelLabel.setObjectName("excelLabel")
        self.verticalLayout.addWidget(self.excelLabel)
        self.excelLineEdit = QtWidgets.QLineEdit(self.widget)
        self.excelLineEdit.setObjectName("excelLineEdit")
        self.verticalLayout.addWidget(self.excelLineEdit)
        self.sheetLabel = QtWidgets.QLabel(self.widget)
        self.sheetLabel.setObjectName("sheetLabel")
        self.verticalLayout.addWidget(self.sheetLabel)
        self.sheetLineEdit = QtWidgets.QLineEdit(self.widget)
        self.sheetLineEdit.setObjectName("sheetLineEdit")
        self.verticalLayout.addWidget(self.sheetLineEdit)
        self.wordLabel = QtWidgets.QLabel(self.widget)
        self.wordLabel.setObjectName("wordLabel")
        self.verticalLayout.addWidget(self.wordLabel)
        self.wordLineEdit = QtWidgets.QLineEdit(self.widget)
        self.wordLineEdit.setObjectName("wordLineEdit")
        self.verticalLayout.addWidget(self.wordLineEdit)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Dialog", "文件生成器"))
        self.excelLabel.setText(_translate("Dialog", "打开 excel 文件："))
        self.wordLabel.setText(_translate("Dialog", "打开 word  文件："))
        self.sheetLabel.setText(_translate("Dialog", "填写表单名："))
        self.excelPushButton.setText(_translate("Dialog", "打开"))
        self.wordPushButton.setText(_translate("Dialog", "打开"))
        self.generatorPushButton.setText(_translate("Dialog", "生成"))

    def bindSignal(self):
        self.excelPushButton.clicked.connect(self.onOpenExcelFileClicked)
        self.wordPushButton.clicked.connect(self.onOpenWordFileClicked)
        self.generatorPushButton.clicked.connect(self.onGeneratorButtonClicked)

    @QtCore.pyqtSlot()
    def onOpenExcelFileClicked(self):
        excelFilePath = QtWidgets.QFileDialog.getOpenFileName(self, "打开 excel 文件", "./", "excel file (*.xlsx  *xls *.csv *.xml)")
        self.excelLineEdit.insert(excelFilePath[0])

    @QtCore.pyqtSlot()
    def onOpenWordFileClicked(self):
        wordFilePath = QtWidgets.QFileDialog.getOpenFileName(self, "打开 word 文件", "./", "word file (*.docx  *doc)")
        self.wordLineEdit.insert(wordFilePath[0])

    @QtCore.pyqtSlot()
    def onGeneratorButtonClicked(self):
        excelFilePath = self.excelLineEdit.text()
        wordFilePath = self.wordLineEdit.text()
        sheetName = self.sheetLineEdit.text()

        if excelFilePath == "" or wordFilePath == "" or sheetName == "":
            msgBox = QtWidgets.QMessageBox()
            msgBox.setText("请正确填写信息")
            msgBox.exec()
            return
        
        self.__lockWidget(True)

        try:
            pattern_relpacer.replace_pattern_in_template(excelFilePath, sheetName, wordFilePath)
        except Exception as e:
            msgBox = QtWidgets.QMessageBox()
            msgBox.setText("error: %s" % (e))
            msgBox.exec()
        else:
            msgBox = QtWidgets.QMessageBox()
            msgBox.setText("生成完成")
            msgBox.exec()

        self.__lockWidget(False)

    def __lockWidget(self, locked: bool):
        self.excelPushButton.setEnabled(not locked)
        self.wordPushButton.setEnabled(not locked)
        self.generatorPushButton.setEnabled(not locked)
        self.excelLineEdit.setReadOnly(locked)
        self.wordLineEdit.setReadOnly(locked)
        self.sheetLineEdit.setReadOnly(locked)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)

    wnd = MainWindow()
    wnd.show()

    sys.exit(app.exec_())
